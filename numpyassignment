x=[11,20,8,24,11,31,11,23,6,30,10,25,7,26,15,21,12,29,10,25,-13,24,9,24,9,22,9,21,10,24,9,30,9,29,7,28,14,22,7,23,7,25,10,31,13,28,9,25,13,26,9,29,8,21,13,22,7,26,12,30,11,32,12,22,12,32,9,22,13,28,13,26,10,22,12,26,13,22,11,27,9,29,13,26,15,21,11,23,9,25,8,31,8,32,6,26,11,26,12,20,10,29,9,22,15,20,10,29,14,22,8,26,7,20,8,21,4,21,7,21,2,21,5,7,21,2,3,21,3,18,6,22,7,18,6,22,4,2,20,2,3,20,8,22,2,18,6,22,8,22,5,7,18,5,5,18,3,21,7,20,3,18,2,19,8,4,21,3,8,22,8,20,-10,22,12,22,7,20,11,71,22,10,11,21,9,22,12,18,8,20,12,21,8,10,21,9,8,22,11,19,11,19,9,18,10,18,8,7,22,10,9,20,12,19,7,21,10,21,9,20,8,10,19,12]
[3]
print(x)
[11, 20, 8, 24, 11, 31, 11, 23, 6, 30, 10, 25, 7, 26, 15, 21, 12, 29, 10, 25, -13, 24, 9, 24, 9, 22, 9, 21, 10, 24, 9, 30, 9, 29, 7, 28, 14, 22, 7, 23, 7, 25, 10, 31, 13, 28, 9, 25, 13, 26, 9, 29, 8, 21, 13, 22, 7, 26, 12, 30, 11, 32, 12, 22, 12, 32, 9, 22, 13, 28, 13, 26, 10, 22, 12, 26, 13, 22, 11, 27, 9, 29, 13, 26, 15, 21, 11, 23, 9, 25, 8, 31, 8, 32, 6, 26, 11, 26, 12, 20, 10, 29, 9, 22, 15, 20, 10, 29, 14, 22, 8, 26, 7, 20, 8, 21, 4, 21, 7, 21, 2, 21, 5, 7, 21, 2, 3, 21, 3, 18, 6, 22, 7, 18, 6, 22, 4, 2, 20, 2, 3, 20, 8, 22, 2, 18, 6, 22, 8, 22, 5, 7, 18, 5, 5, 18, 3, 21, 7, 20, 3, 18, 2, 19, 8, 4, 21, 3, 8, 22, 8, 20, -10, 22, 12, 22, 7, 20, 11, 71, 22, 10, 11, 21, 9, 22, 12, 18, 8, 20, 12, 21, 8, 10, 21, 9, 8, 22, 11, 19, 11, 19, 9, 18, 10, 18, 8, 7, 22, 10, 9, 20, 12, 19, 7, 21, 10, 21, 9, 20, 8, 10, 19, 12]

[4]
import numpy as np
arr=np.array(x)
print(arr)
[ 11  20   8  24  11  31  11  23   6  30  10  25   7  26  15  21  12  29
  10  25 -13  24   9  24   9  22   9  21  10  24   9  30   9  29   7  28
  14  22   7  23   7  25  10  31  13  28   9  25  13  26   9  29   8  21
  13  22   7  26  12  30  11  32  12  22  12  32   9  22  13  28  13  26
  10  22  12  26  13  22  11  27   9  29  13  26  15  21  11  23   9  25
   8  31   8  32   6  26  11  26  12  20  10  29   9  22  15  20  10  29
  14  22   8  26   7  20   8  21   4  21   7  21   2  21   5   7  21   2
   3  21   3  18   6  22   7  18   6  22   4   2  20   2   3  20   8  22
   2  18   6  22   8  22   5   7  18   5   5  18   3  21   7  20   3  18
   2  19   8   4  21   3   8  22   8  20 -10  22  12  22   7  20  11  71
  22  10  11  21   9  22  12  18   8  20  12  21   8  10  21   9   8  22
  11  19  11  19   9  18  10  18   8   7  22  10   9  20  12  19   7  21
  10  21   9  20   8  10  19  12]

[5]
#question 1
arr2=arr.reshape((4,4,7,2))
arr2
array([[[[ 11,  20],
         [  8,  24],
         [ 11,  31],
         [ 11,  23],
         [  6,  30],
         [ 10,  25],
         [  7,  26]],

        [[ 15,  21],
         [ 12,  29],
         [ 10,  25],
         [-13,  24],
         [  9,  24],
         [  9,  22],
         [  9,  21]],

        [[ 10,  24],
         [  9,  30],
         [  9,  29],
         [  7,  28],
         [ 14,  22],
         [  7,  23],
         [  7,  25]],

        [[ 10,  31],
         [ 13,  28],
         [  9,  25],
         [ 13,  26],
         [  9,  29],
         [  8,  21],
         [ 13,  22]]],


       [[[  7,  26],
         [ 12,  30],
         [ 11,  32],
         [ 12,  22],
         [ 12,  32],
         [  9,  22],
         [ 13,  28]],

        [[ 13,  26],
         [ 10,  22],
         [ 12,  26],
         [ 13,  22],
         [ 11,  27],
         [  9,  29],
         [ 13,  26]],

        [[ 15,  21],
         [ 11,  23],
         [  9,  25],
         [  8,  31],
         [  8,  32],
         [  6,  26],
         [ 11,  26]],

        [[ 12,  20],
         [ 10,  29],
         [  9,  22],
         [ 15,  20],
         [ 10,  29],
         [ 14,  22],
         [  8,  26]]],


       [[[  7,  20],
         [  8,  21],
         [  4,  21],
         [  7,  21],
         [  2,  21],
         [  5,   7],
         [ 21,   2]],

        [[  3,  21],
         [  3,  18],
         [  6,  22],
         [  7,  18],
         [  6,  22],
         [  4,   2],
         [ 20,   2]],

        [[  3,  20],
         [  8,  22],
         [  2,  18],
         [  6,  22],
         [  8,  22],
         [  5,   7],
         [ 18,   5]],

        [[  5,  18],
         [  3,  21],
         [  7,  20],
         [  3,  18],
         [  2,  19],
         [  8,   4],
         [ 21,   3]]],


       [[[  8,  22],
         [  8,  20],
         [-10,  22],
         [ 12,  22],
         [  7,  20],
         [ 11,  71],
         [ 22,  10]],

        [[ 11,  21],
         [  9,  22],
         [ 12,  18],
         [  8,  20],
         [ 12,  21],
         [  8,  10],
         [ 21,   9]],

        [[  8,  22],
         [ 11,  19],
         [ 11,  19],
         [  9,  18],
         [ 10,  18],
         [  8,   7],
         [ 22,  10]],

        [[  9,  20],
         [ 12,  19],
         [  7,  21],
         [ 10,  21],
         [  9,  20],
         [  8,  10],
         [ 19,  12]]]])
[6]
#question 2
print(arr2.ndim)
print(arr2.shape)
4
(4, 4, 7, 2)

[7]
#question 3
print("Printing daily temp for first week of nov month")
print(arr2[0,0,:,:])
print("Printing daily temp for first week of dec month")
print(arr2[1,0,:,:])
print("Printing daily temp for first week of jan month")
print(arr2[2,0,:,:])
print("Printing daily temp for first week of feb month")
print(arr2[3,0,:,:])
Printing daily temp for first week of nov month
[[11 20]
 [ 8 24]
 [11 31]
 [11 23]
 [ 6 30]
 [10 25]
 [ 7 26]]
Printing daily temp for first week of dec month
[[ 7 26]
 [12 30]
 [11 32]
 [12 22]
 [12 32]
 [ 9 22]
 [13 28]]
Printing daily temp for first week of jan month
[[ 7 20]
 [ 8 21]
 [ 4 21]
 [ 7 21]
 [ 2 21]
 [ 5  7]
 [21  2]]
Printing daily temp for first week of feb month
[[  8  22]
 [  8  20]
 [-10  22]
 [ 12  22]
 [  7  20]
 [ 11  71]
 [ 22  10]]

[8]
#question 4
print("Temperature for tuesday of each month: ")
print(arr2[:,:,1,:])
Temperature for tuesday of each month: 
[[[ 8 24]
  [12 29]
  [ 9 30]
  [13 28]]

 [[12 30]
  [10 22]
  [11 23]
  [10 29]]

 [[ 8 21]
  [ 3 18]
  [ 8 22]
  [ 3 21]]

 [[ 8 20]
  [ 9 22]
  [11 19]
  [12 19]]]

[9]
#question 5
print("Max temp for all week days of dec and feb")
print(arr2[1::2,:,0:5,1])

Max temp for all week days of dec and feb
[[[26 30 32 22 32]
  [26 22 26 22 27]
  [21 23 25 31 32]
  [20 29 22 20 29]]

 [[22 20 22 22 20]
  [21 22 18 20 21]
  [22 19 19 18 18]
  [20 19 21 21 20]]]

[30]
#question 10
q1=float(np.quantile(arr2,0.25))
print("First quantile:",q1)
q2=float(np.median(arr2))
print("Second quantile:",q2)
q3=float(np.quantile(arr2,0.75))
print("Third quantile:",q3)
print("PRINTING OUTLIERS:)")
IQR=q3-q1                       #Inter quartile
lower=float(q1-1.5*IQR)
upper=float(q3+1.5*IQR)
print("Lower limit:",lower)
print("Upper limit:",upper)
print("Values not in range",(lower, upper),"are outliers")
ind1=np.where(arr2<lower)
ind2=np.where(arr2>upper)
print(ind1)
print("Lower outliers index:",ind1)
print("Upper outliers index:",ind2)


First quantile: 8.75
Second quantile: 13.0
Third quantile: 22.0
PRINTING OUTLIERS:)
Lower limit: -11.125
Upper limit: 41.875
Values not in range (-11.125, 41.875) are outliers
(array([0], dtype=int64), array([1], dtype=int64), array([3], dtype=int64), array([0], dtype=int64))
Lower outliers index: (array([0], dtype=int64), array([1], dtype=int64), array([3], dtype=int64), array([0], dtype=int64))
Upper outliers index: (array([3], dtype=int64), array([0], dtype=int64), array([5], dtype=int64), array([1], dtype=int64))

[12]
#question 12
print("Average max temp for winter months")
x=arr2[:,:,:,1]
print(x)
np.average(x)


Average max temp for winter months
[[[20 24 31 23 30 25 26]
  [21 29 25 24 24 22 21]
  [24 30 29 28 22 23 25]
  [31 28 25 26 29 21 22]]

 [[26 30 32 22 32 22 28]
  [26 22 26 22 27 29 26]
  [21 23 25 31 32 26 26]
  [20 29 22 20 29 22 26]]

 [[20 21 21 21 21  7  2]
  [21 18 22 18 22  2  2]
  [20 22 18 22 22  7  5]
  [18 21 20 18 19  4  3]]

 [[22 20 22 22 20 71 10]
  [21 22 18 20 21 10  9]
  [22 19 19 18 18  7 10]
  [20 19 21 21 20 10 12]]]

21.526785714285715
[13]
#question 13
print("Weekly min avg temp for month of dec")
print("Min avg temp for 1st week")
arr3=arr2[1,0,:,0]
print(arr3)
print(np.average(arr3))
print("Min avg temp for 2nd week")
arr3=arr2[1,1,:,0]
print(arr3)
print(np.average(arr3))
print("Min avg temp for 3rd week")
arr3=arr2[1,2,:,0]
print(arr3)
print(np.average(arr3))
print("Min avg temp for 4th week")
arr3=arr2[1,3,:,0]
print(arr3)
print(np.average(arr3))
Weekly min avg temp for month of dec
Min avg temp for 1st week
[ 7 12 11 12 12  9 13]
10.857142857142858
Min avg temp for 2nd week
[13 10 12 13 11  9 13]
11.571428571428571
Min avg temp for 3rd week
[15 11  9  8  8  6 11]
9.714285714285714
Min avg temp for 4th week
[12 10  9 15 10 14  8]
11.142857142857142

[14]
#question 14
print("Overall avg temp for months dec and jan")
arr3=arr2[1:3,:,:,:]
print(np.average(arr3))
Overall avg temp for months dec and jan
14.857142857142858

[36]
#question 15
print("least temp experienced by the city in the month of Dec and Jan")
tp1=arr2[1:3,:,:,:]
temp1=np.min(tp1)
print("least temp:",temp1)
ind=np.where(arr<=temp1)
ind


 
least temp experienced by the city in the month of Dec and Jan
least temp: 2

(array([ 20, 120, 125, 137, 139, 144, 162, 172], dtype=int64),)
[43]
#question 16
print("max temp in the month of Feb and return its date")
tp2=arr2[3,:,:,:]
temp2=np.max(tp2)
print("Max temp:", temp2)
max temp in the month of Feb and return its date
Max temp: 71

[15]
#question 17
print("days in the month of Nov where the max temp of the day dropped below the avg temp of the month")
nov=arr2[0,:,:,:]
avgg=np.average(nov)
print("avg temp of the month is:",avgg)
temp=arr2[0,:,:,1]
var=temp[temp<avgg]
print(var)
print("No such day is there.")
days in the month of Nov where the max temp of the day dropped below the avg temp of the month
avg temp of the month is: 17.160714285714285
[]
No such day is there.

[16]
#question 18
print("An array where the weeks of the same month must be present in the same row :")
arr4=arr2.reshape(4,56)
arr4
An array where the weeks of the same month must be present in the same row :

array([[ 11,  20,   8,  24,  11,  31,  11,  23,   6,  30,  10,  25,   7,
         26,  15,  21,  12,  29,  10,  25, -13,  24,   9,  24,   9,  22,
          9,  21,  10,  24,   9,  30,   9,  29,   7,  28,  14,  22,   7,
         23,   7,  25,  10,  31,  13,  28,   9,  25,  13,  26,   9,  29,
          8,  21,  13,  22],
       [  7,  26,  12,  30,  11,  32,  12,  22,  12,  32,   9,  22,  13,
         28,  13,  26,  10,  22,  12,  26,  13,  22,  11,  27,   9,  29,
         13,  26,  15,  21,  11,  23,   9,  25,   8,  31,   8,  32,   6,
         26,  11,  26,  12,  20,  10,  29,   9,  22,  15,  20,  10,  29,
         14,  22,   8,  26],
       [  7,  20,   8,  21,   4,  21,   7,  21,   2,  21,   5,   7,  21,
          2,   3,  21,   3,  18,   6,  22,   7,  18,   6,  22,   4,   2,
         20,   2,   3,  20,   8,  22,   2,  18,   6,  22,   8,  22,   5,
          7,  18,   5,   5,  18,   3,  21,   7,  20,   3,  18,   2,  19,
          8,   4,  21,   3],
       [  8,  22,   8,  20, -10,  22,  12,  22,   7,  20,  11,  71,  22,
         10,  11,  21,   9,  22,  12,  18,   8,  20,  12,  21,   8,  10,
         21,   9,   8,  22,  11,  19,  11,  19,   9,  18,  10,  18,   8,
          7,  22,  10,   9,  20,  12,  19,   7,  21,  10,  21,   9,  20,
          8,  10,  19,  12]])
[17]
#question 19
print("Array storing data in fahrenheit")
arr4=(arr2*9)/5 +32
print(arr4)
Array storing data in fahrenheit
[[[[ 51.8  68. ]
   [ 46.4  75.2]
   [ 51.8  87.8]
   [ 51.8  73.4]
   [ 42.8  86. ]
   [ 50.   77. ]
   [ 44.6  78.8]]

  [[ 59.   69.8]
   [ 53.6  84.2]
   [ 50.   77. ]
   [  8.6  75.2]
   [ 48.2  75.2]
   [ 48.2  71.6]
   [ 48.2  69.8]]

  [[ 50.   75.2]
   [ 48.2  86. ]
   [ 48.2  84.2]
   [ 44.6  82.4]
   [ 57.2  71.6]
   [ 44.6  73.4]
   [ 44.6  77. ]]

  [[ 50.   87.8]
   [ 55.4  82.4]
   [ 48.2  77. ]
   [ 55.4  78.8]
   [ 48.2  84.2]
   [ 46.4  69.8]
   [ 55.4  71.6]]]


 [[[ 44.6  78.8]
   [ 53.6  86. ]
   [ 51.8  89.6]
   [ 53.6  71.6]
   [ 53.6  89.6]
   [ 48.2  71.6]
   [ 55.4  82.4]]

  [[ 55.4  78.8]
   [ 50.   71.6]
   [ 53.6  78.8]
   [ 55.4  71.6]
   [ 51.8  80.6]
   [ 48.2  84.2]
   [ 55.4  78.8]]

  [[ 59.   69.8]
   [ 51.8  73.4]
   [ 48.2  77. ]
   [ 46.4  87.8]
   [ 46.4  89.6]
   [ 42.8  78.8]
   [ 51.8  78.8]]

  [[ 53.6  68. ]
   [ 50.   84.2]
   [ 48.2  71.6]
   [ 59.   68. ]
   [ 50.   84.2]
   [ 57.2  71.6]
   [ 46.4  78.8]]]


 [[[ 44.6  68. ]
   [ 46.4  69.8]
   [ 39.2  69.8]
   [ 44.6  69.8]
   [ 35.6  69.8]
   [ 41.   44.6]
   [ 69.8  35.6]]

  [[ 37.4  69.8]
   [ 37.4  64.4]
   [ 42.8  71.6]
   [ 44.6  64.4]
   [ 42.8  71.6]
   [ 39.2  35.6]
   [ 68.   35.6]]

  [[ 37.4  68. ]
   [ 46.4  71.6]
   [ 35.6  64.4]
   [ 42.8  71.6]
   [ 46.4  71.6]
   [ 41.   44.6]
   [ 64.4  41. ]]

  [[ 41.   64.4]
   [ 37.4  69.8]
   [ 44.6  68. ]
   [ 37.4  64.4]
   [ 35.6  66.2]
   [ 46.4  39.2]
   [ 69.8  37.4]]]


 [[[ 46.4  71.6]
   [ 46.4  68. ]
   [ 14.   71.6]
   [ 53.6  71.6]
   [ 44.6  68. ]
   [ 51.8 159.8]
   [ 71.6  50. ]]

  [[ 51.8  69.8]
   [ 48.2  71.6]
   [ 53.6  64.4]
   [ 46.4  68. ]
   [ 53.6  69.8]
   [ 46.4  50. ]
   [ 69.8  48.2]]

  [[ 46.4  71.6]
   [ 51.8  66.2]
   [ 51.8  66.2]
   [ 48.2  64.4]
   [ 50.   64.4]
   [ 46.4  44.6]
   [ 71.6  50. ]]

  [[ 48.2  68. ]
   [ 53.6  66.2]
   [ 44.6  69.8]
   [ 50.   69.8]
   [ 48.2  68. ]
   [ 46.4  50. ]
   [ 66.2  53.6]]]]

[18]
#question 20
print("Sorting in descending order on the basis of the weekly avvg for dec month")
arr6=arr2[1,0,:,:]
avg1=np.average(arr6)
print("Average for first week:",avg1)
arr6=arr2[1,1,:,:]
avg2=np.average(arr6)
print("Average for 2nd week",avg2)
arr6=arr2[1,2,:,:]
avg3=np.average(arr6)
print("Average for 3rd week",avg3)
arr6=arr2[1,3,:,:]
avg4=np.average(arr6)
print("Average for 4th week",avg4)
arrr=np.array([avg1,avg2,avg3,avg4])
print(np.sort(arrr)[::-1])
#printing array acc to the result we got from week sorting
print(arr2[0,0,:,:])
print(arr2[0,1,:,:])
print(arr2[0,2,:,:])
print(arr2[0,3,:,:])

Sorting in descending order on the basis of the weekly avvg for dec month
Average for first week: 19.142857142857142
Average for 2nd week 18.5
Average for 3rd week 18.0
Average for 4th week 17.571428571428573
[19.14285714 18.5        18.         17.57142857]
[[11 20]
 [ 8 24]
 [11 31]
 [11 23]
 [ 6 30]
 [10 25]
 [ 7 26]]
[[ 15  21]
 [ 12  29]
 [ 10  25]
 [-13  24]
 [  9  24]
 [  9  22]
 [  9  21]]
[[10 24]
 [ 9 30]
 [ 9 29]
 [ 7 28]
 [14 22]
 [ 7 23]
 [ 7 25]]
[[10 31]
 [13 28]
 [ 9 25]
 [13 26]
 [ 9 29]
 [ 8 21]
 [13 22]]

[19]
#question 21
print("Sort the temp of the first three days of each month in descending order on the basis of overall average for the whole winter.")
avg=np.average(arr2)
print("Average temp for whole winter:",avg)
arr7=arr2[:,0,0:3,:]
arr7


Sort the temp of the first three days of each month in descending order on the basis of overall average for the whole winter.
Average temp for whole winter: 15.450892857142858

array([[[ 11,  20],
        [  8,  24],
        [ 11,  31]],

       [[  7,  26],
        [ 12,  30],
        [ 11,  32]],

       [[  7,  20],
        [  8,  21],
        [  4,  21]],

       [[  8,  22],
        [  8,  20],
        [-10,  22]]])
[20]
#question 22
print("Array that stores the difference between the min and max temp for each day")
arrr1=arr2[:,:,:,0]
arrr2=arr2[:,:,:,1]
arrr3=arrr2-arrr1
print(arrr3)
Array that stores the difference between the min and max temp for each day
[[[  9  16  20  12  24  15  19]
  [  6  17  15  37  15  13  12]
  [ 14  21  20  21   8  16  18]
  [ 21  15  16  13  20  13   9]]

 [[ 19  18  21  10  20  13  15]
  [ 13  12  14   9  16  20  13]
  [  6  12  16  23  24  20  15]
  [  8  19  13   5  19   8  18]]

 [[ 13  13  17  14  19   2 -19]
  [ 18  15  16  11  16  -2 -18]
  [ 17  14  16  16  14   2 -13]
  [ 13  18  13  15  17  -4 -18]]

 [[ 14  12  32  10  13  60 -12]
  [ 10  13   6  12   9   2 -12]
  [ 14   8   8   9   8  -1 -12]
  [ 11   7  14  11  11   2  -7]]]

[38]
#question 23
print("Difference between the max temp of two consecutive days for each month")
ar1=abs(arr2[:,:,1:,1]-arr2[:,:,:6,1])
ar1

Difference between the max temp of two consecutive days for each month

array([[[ 4,  7,  8,  7,  5,  1],
        [ 8,  4,  1,  0,  2,  1],
        [ 6,  1,  1,  6,  1,  2],
        [ 3,  3,  1,  3,  8,  1]],

       [[ 4,  2, 10, 10, 10,  6],
        [ 4,  4,  4,  5,  2,  3],
        [ 2,  2,  6,  1,  6,  0],
        [ 9,  7,  2,  9,  7,  4]],

       [[ 1,  0,  0,  0, 14,  5],
        [ 3,  4,  4,  4, 20,  0],
        [ 2,  4,  4,  0, 15,  2],
        [ 3,  1,  2,  1, 15,  1]],

       [[ 2,  2,  0,  2, 51, 61],
        [ 1,  4,  2,  1, 11,  1],
        [ 3,  0,  1,  0, 11,  3],
        [ 1,  2,  0,  1, 10,  2]]])
[39]
#question 24
print("Difference between the minimum temp of two consecutive days for each month")
ar2=abs(arr2[:,:,1:,0]-arr2[:,:,:6,0])
ar2


Difference between the minimum temp of two consecutive days for each month

array([[[ 3,  3,  0,  5,  4,  3],
        [ 3,  2, 23, 22,  0,  0],
        [ 1,  0,  2,  7,  7,  0],
        [ 3,  4,  4,  4,  1,  5]],

       [[ 5,  1,  1,  0,  3,  4],
        [ 3,  2,  1,  2,  2,  4],
        [ 4,  2,  1,  0,  2,  5],
        [ 2,  1,  6,  5,  4,  6]],

       [[ 1,  4,  3,  5,  3, 16],
        [ 0,  3,  1,  1,  2, 16],
        [ 5,  6,  4,  2,  3, 13],
        [ 2,  4,  4,  1,  6, 13]],

       [[ 0, 18, 22,  5,  4, 11],
        [ 2,  3,  4,  4,  4, 13],
        [ 3,  0,  2,  1,  2, 14],
        [ 3,  5,  3,  1,  1, 11]]])
[40]
#question 25
print("Combining arrays of q23 and q24")
ar3=np.concatenate([ar1, ar2])
print(ar3)
Combining arrays of q23 and q24
[[[ 4  7  8  7  5  1]
  [ 8  4  1  0  2  1]
  [ 6  1  1  6  1  2]
  [ 3  3  1  3  8  1]]

 [[ 4  2 10 10 10  6]
  [ 4  4  4  5  2  3]
  [ 2  2  6  1  6  0]
  [ 9  7  2  9  7  4]]

 [[ 1  0  0  0 14  5]
  [ 3  4  4  4 20  0]
  [ 2  4  4  0 15  2]
  [ 3  1  2  1 15  1]]

 [[ 2  2  0  2 51 61]
  [ 1  4  2  1 11  1]
  [ 3  0  1  0 11  3]
  [ 1  2  0  1 10  2]]

 [[ 3  3  0  5  4  3]
  [ 3  2 23 22  0  0]
  [ 1  0  2  7  7  0]
  [ 3  4  4  4  1  5]]

 [[ 5  1  1  0  3  4]
  [ 3  2  1  2  2  4]
  [ 4  2  1  0  2  5]
  [ 2  1  6  5  4  6]]

 [[ 1  4  3  5  3 16]
  [ 0  3  1  1  2 16]
  [ 5  6  4  2  3 13]
  [ 2  4  4  1  6 13]]

 [[ 0 18 22  5  4 11]
  [ 2  3  4  4  4 13]
  [ 3  0  2  1  2 14]
  [ 3  5  3  1  1 11]]]

week=var[0]
day=var[1]
days={0:'Monday',1:'Tuesday',2:'Wednesday',3:'Thursday',4:'Friday',5:'Saturday',6:'Sunday'}
for i in week:
    print("week:",i+1,"day:",days)
